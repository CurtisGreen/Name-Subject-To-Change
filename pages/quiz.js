import Head from "next/head";
import styles from "../styles/Home.module.css";
import QuestionStyles from "../styles/Questions.module.css";
import { useState } from "react";
import Link from "next/link";
import { generateRandomKanji } from "../lib/GenerateKanji.js";
import { generateAnswerChoices } from "../lib/GenerateAnswerChoices";
import { getRandInList } from "../lib/RandomUtilities";
import QuizButton from "../components/QuizButton";

export default function Quiz() {
  // Keep track of answers
  const numQuestions = 5;
  const [history, setHistory] = useState([]);
  const [isResultsShown, setIsResultsShown] = useState(false);
  const [questionStyle, setQuestionStyle] = useState(
    QuestionStyles.questionsOut
  );

  // Get current kanji
  const curKanji = generateRandomKanji();

  // Setup question arr
  const answers = generateAnswerChoices(curKanji, 4);

  const selectAnswer = (answer) => {
    setHistory([...history, { answer, curKanji }]);
    setIsResultsShown(history.length + 1 >= numQuestions);
    // setQuestionStyle(QuestionStyles.questionOut);
    // setTimeout(() => setQuestionStyle(QuestionStyles.questions), 500);
  };

  const Questions = () => (
    <div style={{ display: "flex" }}>
      <div className={QuestionStyles.questions}>
        {/* Show one of the meanings */}
        <h2>{getRandInList(curKanji.meanings)}</h2>
        <div>
          {answers.map((answer) => (
            <QuizButton key={answer.kanji} onClick={() => selectAnswer(answer)}>
              {answer.kanji}
            </QuizButton>
          ))}
        </div>
      </div>
      <div className={QuestionStyles.questionsOut}>
        {/* Show one of the meanings */}
        <h2>{getRandInList(curKanji.meanings)}</h2>
        <div>
          {answers.map((answer) => (
            <QuizButton key={answer.kanji} onClick={() => selectAnswer(answer)}>
              {answer.kanji}
            </QuizButton>
          ))}
        </div>
      </div>
    </div>
  );

  const Results = () => (
    <>
      <button onClick={() => setHistory([])}>Reset?</button>
      <div>
        {history.map((entry) => (
          <div
            key={entry.answer.kanji}
            style={{
              fontSize: "2rem",
              margin: "5px",
              padding: "5px",
              display: "grid",
              gridTemplateColumns: "repeat(3, 1fr)",
            }}
          >
            {/* TODO: Show all meanings */}
            <div>
              {entry.answer.kanji}: {entry.answer.meanings[0]}
            </div>
            <div style={{ justifySelf: "center" }}>vs</div>
            <div
              style={{
                color:
                  entry.answer.kanji == entry.curKanji.kanji ? "green" : "red",
              }}
            >
              {entry.curKanji.kanji}: {entry.curKanji.meanings[0]}
            </div>
          </div>
        ))}
      </div>
    </>
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>Quiz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Quiz</h1>
        <Link href={"/"}>Home</Link>

        {isResultsShown && history.length > 0 ? <Results /> : <Questions />}
      </main>
    </div>
  );
}
